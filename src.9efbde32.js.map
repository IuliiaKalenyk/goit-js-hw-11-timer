{"version":3,"sources":["index.js"],"names":["refs","timer","document","querySelector","days","hours","mins","secs","console","log","start","startTime","Date","now","setInterval","currentTime","getTimeComponents","time","pad","Math","floor","updateClockface","textContent","value","String","padStart"],"mappings":";AAAAA,KAAO,CACLC,MAAOC,SAASC,cAAc,UAC9BC,KAAMF,SAASC,cAAc,uBAC7BE,MAAOH,SAASC,cAAc,wBAC9BG,KAAMJ,SAASC,cAAc,uBAC7BI,KAAML,SAASC,cAAc,wBAG/BK,QAAQC,IAAIT,KAAKC,OACjB,IAAMA,EAAQ,CACZS,MAAQ,WACAC,IAAAA,EAAYC,KAAKC,MAEvBC,YAAY,WACJC,IAE8BC,EAAAA,EAFhBJ,KAAKC,MACOF,GACxBP,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAK3BC,QAAQC,IAAOL,GAAAA,OAAAA,EAAQC,KAAAA,OAAAA,EAASC,KAAAA,OAAAA,EAAQC,KAAAA,OAAAA,KACvC,OAKP,SAASS,EAAkBC,GAKlB,MAAA,CAAEb,KAJIc,EAAIC,KAAKC,MAAMH,EAAQ,QAIrBZ,MAHDa,EAAIC,KAAKC,MAAOH,EAAQ,MAAyB,OAGzCX,KAFTY,EAAIC,KAAKC,MAAOH,EAAQ,KAAoB,MAE7BV,KADfW,EAAIC,KAAKC,MAAOH,EAAQ,IAAc,OAGrD,SAASI,EAA6C,GAA3BjB,IAAAA,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC5CP,KAAKC,MAAMqB,YAAiBlB,GAAAA,OAAAA,EAAQC,KAAAA,OAAAA,EAASC,KAAAA,OAAAA,EAAQC,KAAAA,OAAAA,GAGvD,SAASW,EAAIK,GACJC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAdnCxB,EAAMS","file":"src.9efbde32.js","sourceRoot":"../src","sourcesContent":["refs = {\n  timer: document.querySelector('.timer'),\n  days: document.querySelector('[data-value=\"days\"]'),\n  hours: document.querySelector('[data-value=\"hours\"]'),\n  mins: document.querySelector('[data-value=\"mins\"]'),\n  secs: document.querySelector('[data-value=\"secs\"]'),\n};\n\nconsole.log(refs.timer);\nconst timer = {\n  start() {\n    const startTime = Date.now();\n\n    setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = currentTime - startTime;\n      const { days, hours, mins, secs } = getTimeComponents(deltaTime);\n      /* console.log('start -> startTime', currentTime); */\n      /*  console.log('ghjj') */\n      /* console.log(currentTime - startTime); */\n     /*  console.log(timeComponents); */\n      console.log(`${days}:${hours}:${mins}:${secs}`);\n    }, 1000);\n  },\n};\ntimer.start();\n\nfunction getTimeComponents(time) {\n  const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n  const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n  const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n  const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n  return { days, hours, mins, secs };\n}\nfunction updateClockface({ days, hours, mins, secs }) {\n  refs.timer.textContent = `${days}:${hours}:${mins}:${secs}`;\n}\n\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}"]}